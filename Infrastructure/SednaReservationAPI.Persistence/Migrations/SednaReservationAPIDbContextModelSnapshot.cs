// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SednaReservationAPI.Persistence.Contexts;

#nullable disable

namespace SednaReservationAPI.Persistence.Migrations
{
    [DbContext(typeof(SednaReservationAPIDbContext))]
    partial class SednaReservationAPIDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SednaReservationAPI.Domain.Entities.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("Age")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("Gender")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("SednaReservationAPI.Domain.Entities.Hotel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .HasColumnType("text");

                    b.Property<int>("Star")
                        .HasColumnType("integer");

                    b.Property<int>("StarRating")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Hotels");

                    b.HasData(
                        new
                        {
                            Id = new Guid("caae5206-29f3-4927-972d-247a5df1a9c4"),
                            Address = "1",
                            Deleted = false,
                            Description = "Civardaki en uygun fiyatlı otel",
                            Name = "Su Hotel",
                            Star = 5,
                            StarRating = 4
                        },
                        new
                        {
                            Id = new Guid("4bddd8b8-996a-4259-a677-b1ac921ebe2d"),
                            Address = "2",
                            Deleted = false,
                            Description = "Civardaki en lüks otel",
                            Name = "Ateş Hotel",
                            Star = 3,
                            StarRating = 4
                        },
                        new
                        {
                            Id = new Guid("bfec656a-1e4d-456f-8f11-8c8590331b04"),
                            Address = "3",
                            Deleted = false,
                            Description = "Civardaki en lüks otel",
                            Name = "Toprak Hotel",
                            Star = 3,
                            StarRating = 4
                        },
                        new
                        {
                            Id = new Guid("043a1ff9-91c1-4fcc-b81d-98dd822ebe50"),
                            Address = "4",
                            Deleted = false,
                            Description = "Hava olmasın",
                            Name = "Tahta Hotel",
                            Star = 3,
                            StarRating = 4
                        });
                });

            modelBuilder.Entity("SednaReservationAPI.Domain.Entities.Payment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("PaymentMethod")
                        .HasColumnType("text");

                    b.Property<string>("ReservationId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Payments");

                    b.HasData(
                        new
                        {
                            Id = new Guid("938e7234-c1c5-456c-b42a-95cd55690989"),
                            Amount = 7500m,
                            CreatedDate = new DateTime(2024, 7, 10, 6, 42, 37, 814, DateTimeKind.Utc).AddTicks(9215),
                            Date = new DateTime(2024, 7, 6, 11, 0, 0, 0, DateTimeKind.Utc),
                            Deleted = false,
                            PaymentMethod = "Online",
                            ReservationId = "asdsadasd",
                            Status = "Dolu",
                            UpdatedDate = new DateTime(2024, 7, 6, 11, 0, 0, 0, DateTimeKind.Utc)
                        });
                });

            modelBuilder.Entity("SednaReservationAPI.Domain.Entities.Reservation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CheckIn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("CheckOut")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("RoomId")
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .HasColumnType("text");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("numeric");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Reservations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("28f239cf-26c1-4dab-bd42-4b3dd8778209"),
                            CheckIn = new DateTime(2024, 7, 10, 6, 42, 37, 814, DateTimeKind.Utc).AddTicks(9131),
                            CheckOut = new DateTime(2024, 7, 6, 11, 0, 0, 0, DateTimeKind.Utc),
                            CreatedDate = new DateTime(2024, 7, 10, 6, 42, 37, 814, DateTimeKind.Utc).AddTicks(9137),
                            Deleted = false,
                            RoomId = "asdasdasdsa",
                            Status = "Dolu",
                            TotalPrice = 5000m,
                            UserId = "asdasdasdsa"
                        },
                        new
                        {
                            Id = new Guid("dd0cd34f-a42b-4249-9668-a9b3d820023a"),
                            CheckIn = new DateTime(2024, 7, 10, 6, 42, 37, 814, DateTimeKind.Utc).AddTicks(9142),
                            CheckOut = new DateTime(2024, 7, 5, 11, 0, 0, 0, DateTimeKind.Utc),
                            CreatedDate = new DateTime(2024, 7, 10, 6, 42, 37, 814, DateTimeKind.Utc).AddTicks(9143),
                            Deleted = false,
                            RoomId = "asdasdasdsa",
                            Status = "Dolu",
                            TotalPrice = 7500m,
                            UserId = "asdasdasdsa"
                        },
                        new
                        {
                            Id = new Guid("99ca61e6-3320-4600-b218-9d0a559a8ff2"),
                            CheckIn = new DateTime(2024, 7, 10, 6, 42, 37, 814, DateTimeKind.Utc).AddTicks(9148),
                            CheckOut = new DateTime(2024, 8, 5, 11, 0, 0, 0, DateTimeKind.Utc),
                            CreatedDate = new DateTime(2024, 7, 10, 6, 42, 37, 814, DateTimeKind.Utc).AddTicks(9148),
                            Deleted = false,
                            RoomId = "asdasdasdsa",
                            Status = "Dolu",
                            TotalPrice = 8000m,
                            UserId = "asdasdasdsa"
                        });
                });

            modelBuilder.Entity("SednaReservationAPI.Domain.Entities.Review", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Comment")
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("HotelId")
                        .HasColumnType("uuid");

                    b.Property<float>("Rating")
                        .HasColumnType("real");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("SednaReservationAPI.Domain.Entities.Room", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("BasePrice")
                        .HasColumnType("numeric");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("HotelId")
                        .HasColumnType("text");

                    b.Property<string>("RoomTypeId")
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d59e3f10-d26e-4822-abec-4c06c14c542c"),
                            BasePrice = 3500m,
                            Deleted = false,
                            HotelId = "asdasdasdsa",
                            RoomTypeId = "asdasdasdsa",
                            Status = "Aktif"
                        },
                        new
                        {
                            Id = new Guid("1bd11778-a1a0-4d14-8bca-2e9fac5b7759"),
                            BasePrice = 3500m,
                            Deleted = false,
                            HotelId = "asdasdasdsa",
                            RoomTypeId = "asdasdasdsa",
                            Status = "Boş"
                        },
                        new
                        {
                            Id = new Guid("0b78fc75-d8fd-47fc-a5fc-8f3eba38ecf6"),
                            BasePrice = 3500m,
                            Deleted = false,
                            HotelId = "asdasdasdsa",
                            RoomTypeId = "asdasdasdsa",
                            Status = "Boş"
                        },
                        new
                        {
                            Id = new Guid("9834a325-2a8e-44d0-9c1f-e3327fac0585"),
                            BasePrice = 3500m,
                            Deleted = false,
                            HotelId = "asdasdasdsa",
                            RoomTypeId = "asdasdasdsa",
                            Status = "Boş"
                        });
                });

            modelBuilder.Entity("SednaReservationAPI.Domain.Entities.RoomType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("RoomTypes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ef9629f3-8a81-461a-8731-bfbe8cacdf10"),
                            Deleted = false,
                            Description = "Tek kişilik oda",
                            Name = "Tek Kişilik"
                        },
                        new
                        {
                            Id = new Guid("21db6c78-1900-40c6-b52b-c1b049019a61"),
                            Deleted = false,
                            Description = "İki kişilik oda",
                            Name = "İki Kişilik"
                        },
                        new
                        {
                            Id = new Guid("40b78c63-8689-4bc0-a43a-961b4f5dd20d"),
                            Deleted = false,
                            Description = "Üç kişilik oda",
                            Name = "Üç Kişilik"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
